name: check_and_regenerate_v3

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * *" # everyday at 7 AM
    
permissions:
  contents: write
  pull-requests: write
  
jobs:
  check_changes_and_create_pr:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        id: check_changes
        run: |
          make install-open-api-generator
          make pull-oapi-spec
          make generate
          git diff --quiet || echo "changes_detected=true" >> $GITHUB_OUTPUT

      - name: Fetch RSS Feed
        uses: Promptly-Technologies-LLC/rss-fetch-action@v2
        if: steps.check_changes.outputs.changes_detected
        with:
          feed_url: 'https://openapi-v2.exoscale.com/changes.rss'
          file_path: './changes.json'

      - name: Update readme with the change date from the RSS feed
        id: get_rss
        if: steps.check_changes.outputs.changes_detected
        run: |
          echo "Generated with latest changes from $(date -d "$(jq -r '.entries[0].published' ./changes.json)" +'%Y-%m-%d')" >> README.md
          echo "API_DATE=$(date -d "$(jq -r '.entries[0].published' ./changes.json)" +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          rm -rf ./changes.json
      - name: Create PR
        id: create_pr # Add an ID to the step for logging
        env:
          # Pass the date as an environment variable for use in the commit message
          API_DATE: ${{ steps.get_rss.outputs.API_DATE }}
        if: steps.check_changes.outputs.changes_detected
        uses: peter-evans/create-pull-request@v6
        with:
          title: "v3: regenerate from new API spec from ${{ env.API_DATE }}"
          body: |
            New changes have appeared in the API spec and exoscale-rs v3 has been regenerated.
            
            This PR was automatically generated based on the API spec published on **${{ env.API_DATE }}**.
          branch: generate-v3
          delete-branch: true
          base: main
          # Use a more descriptive and dynamic commit message
          commit-message: |
            feat(api): Regenerate client from spec published on ${{ env.API_DATE }}

            Automated regeneration based on changes detected in the API spec.
            Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          reviewers: hasanhakkaev
          assignees: hasanhakkaev

      - name: Log PR Status
        if: steps.check_changes.outputs.changes_detected
        run: |
          echo "PR Number: ${{ steps.create_pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.create_pr.outputs.pull-request-url }}"
