/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchBackpressureSettings {
    /// The search backpressure mode. Valid values are monitor_only, enforced, or disabled. Default is monitor_only
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<Mode>,
    #[serde(rename = "node_duress", skip_serializing_if = "Option::is_none")]
    pub node_duress: Option<Box<models::NodeDuressSettings>>,
    #[serde(rename = "search_shard_task", skip_serializing_if = "Option::is_none")]
    pub search_shard_task: Option<Box<models::SearchShardSettings>>,
    #[serde(rename = "search_task", skip_serializing_if = "Option::is_none")]
    pub search_task: Option<Box<models::SearchTaskSettings>>,
}

impl SearchBackpressureSettings {
    pub fn new() -> SearchBackpressureSettings {
        SearchBackpressureSettings {
            mode: None,
            node_duress: None,
            search_shard_task: None,
            search_task: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "monitor_only")]
    MonitorOnly,
    #[serde(rename = "enforced")]
    Enforced,
    #[serde(rename = "disabled")]
    Disabled,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::MonitorOnly
    }
}

