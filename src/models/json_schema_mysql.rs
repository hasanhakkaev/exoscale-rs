/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsonSchemaMysql {
    /// The number of seconds to wait for a block to be written to a connection before aborting the write.
    #[serde(rename = "net_write_timeout", skip_serializing_if = "Option::is_none")]
    pub net_write_timeout: Option<u16>,
    /// The storage engine for in-memory internal temporary tables.
    #[serde(rename = "internal_tmp_mem_storage_engine", skip_serializing_if = "Option::is_none")]
    pub internal_tmp_mem_storage_engine: Option<InternalTmpMemStorageEngine>,
    /// Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
    #[serde(rename = "sql_mode", skip_serializing_if = "Option::is_none")]
    pub sql_mode: Option<String>,
    /// The time, in seconds, before cached statistics expire
    #[serde(rename = "information_schema_stats_expiry", skip_serializing_if = "Option::is_none")]
    pub information_schema_stats_expiry: Option<u32>,
    /// Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K)
    #[serde(rename = "sort_buffer_size", skip_serializing_if = "Option::is_none")]
    pub sort_buffer_size: Option<u32>,
    /// Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit)
    #[serde(rename = "innodb_thread_concurrency", skip_serializing_if = "Option::is_none")]
    pub innodb_thread_concurrency: Option<u16>,
    /// The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
    #[serde(rename = "innodb_write_io_threads", skip_serializing_if = "Option::is_none")]
    pub innodb_write_io_threads: Option<u8>,
    /// Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
    #[serde(rename = "innodb_ft_min_token_size", skip_serializing_if = "Option::is_none")]
    pub innodb_ft_min_token_size: Option<u8>,
    /// Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25
    #[serde(rename = "innodb_change_buffer_max_size", skip_serializing_if = "Option::is_none")]
    pub innodb_change_buffer_max_size: Option<u8>,
    /// Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent
    #[serde(rename = "innodb_flush_neighbors", skip_serializing_if = "Option::is_none")]
    pub innodb_flush_neighbors: Option<u8>,
    /// Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M)
    #[serde(rename = "tmp_table_size", skip_serializing_if = "Option::is_none")]
    pub tmp_table_size: Option<u32>,
    /// Slow query log enables capturing of slow queries. Setting slow_query_log to false also truncates the mysql.slow_log table. Default is off
    #[serde(rename = "slow_query_log", skip_serializing_if = "Option::is_none")]
    pub slow_query_log: Option<bool>,
    /// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake
    #[serde(rename = "connect_timeout", skip_serializing_if = "Option::is_none")]
    pub connect_timeout: Option<u16>,
    /// The slow log output destination when slow_query_log is ON. To enable MySQL AI Insights, choose INSIGHTS. To use MySQL AI Insights and the mysql.slow_log table at the same time, choose INSIGHTS,TABLE. To only use the mysql.slow_log table, choose TABLE. To silence slow logs, choose NONE.
    #[serde(rename = "log_output", skip_serializing_if = "Option::is_none")]
    pub log_output: Option<LogOutput>,
    /// The number of seconds to wait for more data from a connection before aborting the read.
    #[serde(rename = "net_read_timeout", skip_serializing_if = "Option::is_none")]
    pub net_read_timeout: Option<u16>,
    /// The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
    #[serde(rename = "innodb_lock_wait_timeout", skip_serializing_if = "Option::is_none")]
    pub innodb_lock_wait_timeout: Option<u16>,
    /// The number of seconds the server waits for activity on a noninteractive connection before closing it.
    #[serde(rename = "wait_timeout", skip_serializing_if = "Option::is_none")]
    pub wait_timeout: Option<u32>,
    /// When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
    #[serde(rename = "innodb_rollback_on_timeout", skip_serializing_if = "Option::is_none")]
    pub innodb_rollback_on_timeout: Option<bool>,
    /// The maximum permitted result length in bytes for the GROUP_CONCAT() function.
    #[serde(rename = "group_concat_max_len", skip_serializing_if = "Option::is_none")]
    pub group_concat_max_len: Option<u64>,
    /// Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
    #[serde(rename = "net_buffer_length", skip_serializing_if = "Option::is_none")]
    pub net_buffer_length: Option<u32>,
    /// When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
    #[serde(rename = "innodb_print_all_deadlocks", skip_serializing_if = "Option::is_none")]
    pub innodb_print_all_deadlocks: Option<bool>,
    /// The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
    #[serde(rename = "innodb_online_alter_log_max_size", skip_serializing_if = "Option::is_none")]
    pub innodb_online_alter_log_max_size: Option<u64>,
    /// The number of seconds the server waits for activity on an interactive connection before closing it.
    #[serde(rename = "interactive_timeout", skip_serializing_if = "Option::is_none")]
    pub interactive_timeout: Option<u32>,
    /// The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
    #[serde(rename = "innodb_log_buffer_size", skip_serializing_if = "Option::is_none")]
    pub innodb_log_buffer_size: Option<u32>,
    /// Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M)
    #[serde(rename = "max_allowed_packet", skip_serializing_if = "Option::is_none")]
    pub max_allowed_packet: Option<u32>,
    /// Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M)
    #[serde(rename = "max_heap_table_size", skip_serializing_if = "Option::is_none")]
    pub max_heap_table_size: Option<u32>,
    /// This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
    #[serde(rename = "innodb_ft_server_stopword_table", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub innodb_ft_server_stopword_table: Option<Option<String>>,
    /// The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
    #[serde(rename = "innodb_read_io_threads", skip_serializing_if = "Option::is_none")]
    pub innodb_read_io_threads: Option<u8>,
    /// Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
    #[serde(rename = "sql_require_primary_key", skip_serializing_if = "Option::is_none")]
    pub sql_require_primary_key: Option<bool>,
    /// Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
    #[serde(rename = "default_time_zone", skip_serializing_if = "Option::is_none")]
    pub default_time_zone: Option<String>,
    /// The slow_query_logs work as SQL statements that take more than long_query_time seconds to execute. Default is 10s
    #[serde(rename = "long_query_time", skip_serializing_if = "Option::is_none")]
    pub long_query_time: Option<f64>,
}

impl JsonSchemaMysql {
    pub fn new() -> JsonSchemaMysql {
        JsonSchemaMysql {
            net_write_timeout: None,
            internal_tmp_mem_storage_engine: None,
            sql_mode: None,
            information_schema_stats_expiry: None,
            sort_buffer_size: None,
            innodb_thread_concurrency: None,
            innodb_write_io_threads: None,
            innodb_ft_min_token_size: None,
            innodb_change_buffer_max_size: None,
            innodb_flush_neighbors: None,
            tmp_table_size: None,
            slow_query_log: None,
            connect_timeout: None,
            log_output: None,
            net_read_timeout: None,
            innodb_lock_wait_timeout: None,
            wait_timeout: None,
            innodb_rollback_on_timeout: None,
            group_concat_max_len: None,
            net_buffer_length: None,
            innodb_print_all_deadlocks: None,
            innodb_online_alter_log_max_size: None,
            interactive_timeout: None,
            innodb_log_buffer_size: None,
            max_allowed_packet: None,
            max_heap_table_size: None,
            innodb_ft_server_stopword_table: None,
            innodb_read_io_threads: None,
            sql_require_primary_key: None,
            default_time_zone: None,
            long_query_time: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InternalTmpMemStorageEngine {
    #[serde(rename = "TempTable")]
    TempTable,
    #[serde(rename = "MEMORY")]
    Memory,
}

impl Default for InternalTmpMemStorageEngine {
    fn default() -> InternalTmpMemStorageEngine {
        Self::TempTable
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LogOutput {
    #[serde(rename = "INSIGHTS")]
    Insights,
    #[serde(rename = "INSIGHTS,TABLE")]
    InsightsCommaTable,
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "TABLE")]
    Table,
}

impl Default for LogOutput {
    fn default() -> LogOutput {
        Self::Insights
    }
}

