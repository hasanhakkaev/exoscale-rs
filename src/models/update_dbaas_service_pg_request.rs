/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateDbaasServicePgRequest {
    #[serde(rename = "pgbouncer-settings", skip_serializing_if = "Option::is_none")]
    pub pgbouncer_settings: Option<Box<models::JsonSchemaPgbouncer>>,
    #[serde(rename = "backup-schedule", skip_serializing_if = "Option::is_none")]
    pub backup_schedule: Option<Box<models::UpdateDbaasServiceMysqlRequestBackupSchedule>>,
    #[serde(rename = "variant", skip_serializing_if = "Option::is_none")]
    pub variant: Option<models::EnumPgVariant>,
    #[serde(rename = "timescaledb-settings", skip_serializing_if = "Option::is_none")]
    pub timescaledb_settings: Option<Box<models::JsonSchemaTimescaledb>>,
    /// Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
    #[serde(rename = "ip-filter", skip_serializing_if = "Option::is_none")]
    pub ip_filter: Option<Vec<String>>,
    /// Service is protected against termination and powering off
    #[serde(rename = "termination-protection", skip_serializing_if = "Option::is_none")]
    pub termination_protection: Option<bool>,
    #[serde(rename = "synchronous-replication", skip_serializing_if = "Option::is_none")]
    pub synchronous_replication: Option<models::EnumPgSynchronousReplication>,
    #[serde(rename = "pglookout-settings", skip_serializing_if = "Option::is_none")]
    pub pglookout_settings: Option<Box<models::JsonSchemaPglookout>>,
    #[serde(rename = "maintenance", skip_serializing_if = "Option::is_none")]
    pub maintenance: Option<Box<models::UpdateDbaasServiceMysqlRequestMaintenance>>,
    /// Version
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// Subscription plan
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<String>,
    /// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
    #[serde(rename = "work-mem", skip_serializing_if = "Option::is_none")]
    pub work_mem: Option<u64>,
    /// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.
    #[serde(rename = "shared-buffers-percentage", skip_serializing_if = "Option::is_none")]
    pub shared_buffers_percentage: Option<u64>,
    #[serde(rename = "pg-settings", skip_serializing_if = "Option::is_none")]
    pub pg_settings: Option<Box<models::JsonSchemaPg>>,
    #[serde(rename = "migration", skip_serializing_if = "Option::is_none")]
    pub migration: Option<Box<models::UpdateDbaasServiceMysqlRequestMigration>>,
}

impl UpdateDbaasServicePgRequest {
    pub fn new() -> UpdateDbaasServicePgRequest {
        UpdateDbaasServicePgRequest {
            pgbouncer_settings: None,
            backup_schedule: None,
            variant: None,
            timescaledb_settings: None,
            ip_filter: None,
            termination_protection: None,
            synchronous_replication: None,
            pglookout_settings: None,
            maintenance: None,
            version: None,
            plan: None,
            work_mem: None,
            shared_buffers_percentage: None,
            pg_settings: None,
            migration: None,
        }
    }
}

