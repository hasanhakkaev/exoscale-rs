/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ZoneName {
    #[serde(rename = "ch-dk-2")]
    ChDk2,
    #[serde(rename = "de-muc-1")]
    DeMuc1,
    #[serde(rename = "ch-gva-2")]
    ChGva2,
    #[serde(rename = "at-vie-1")]
    AtVie1,
    #[serde(rename = "de-fra-1")]
    DeFra1,
    #[serde(rename = "bg-sof-1")]
    BgSof1,
    #[serde(rename = "at-vie-2")]
    AtVie2,
    #[serde(rename = "hr-zag-1")]
    HrZag1,

}

impl std::fmt::Display for ZoneName {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ChDk2 => write!(f, "ch-dk-2"),
            Self::DeMuc1 => write!(f, "de-muc-1"),
            Self::ChGva2 => write!(f, "ch-gva-2"),
            Self::AtVie1 => write!(f, "at-vie-1"),
            Self::DeFra1 => write!(f, "de-fra-1"),
            Self::BgSof1 => write!(f, "bg-sof-1"),
            Self::AtVie2 => write!(f, "at-vie-2"),
            Self::HrZag1 => write!(f, "hr-zag-1"),
        }
    }
}

impl Default for ZoneName {
    fn default() -> ZoneName {
        Self::ChDk2
    }
}

