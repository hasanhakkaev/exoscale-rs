/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateDbaasServiceMysqlRequestIntegrationsInner {
    /// Integration type
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "source-service", skip_serializing_if = "Option::is_none")]
    pub source_service: Option<String>,
    #[serde(rename = "dest-service", skip_serializing_if = "Option::is_none")]
    pub dest_service: Option<String>,
    /// Integration settings
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<serde_json::Value>,
}

impl CreateDbaasServiceMysqlRequestIntegrationsInner {
    pub fn new(r#type: Type) -> CreateDbaasServiceMysqlRequestIntegrationsInner {
        CreateDbaasServiceMysqlRequestIntegrationsInner {
            r#type,
            source_service: None,
            dest_service: None,
            settings: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "read_replica")]
    ReadReplica,
}

impl Default for Type {
    fn default() -> Type {
        Self::ReadReplica
    }
}

