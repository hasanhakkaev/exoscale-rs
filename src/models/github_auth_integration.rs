/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GithubAuthIntegration {
    #[serde(rename = "allow_sign_up", skip_serializing_if = "Option::is_none")]
    pub allow_sign_up: Option<bool>,
    #[serde(
        rename = "allowed_organizations",
        skip_serializing_if = "Option::is_none"
    )]
    pub allowed_organizations: Option<Vec<String>>,
    #[serde(rename = "auto_login", skip_serializing_if = "Option::is_none")]
    pub auto_login: Option<bool>,
    #[serde(rename = "client_id")]
    pub client_id: String,
    #[serde(rename = "client_secret")]
    pub client_secret: String,
    #[serde(rename = "skip_org_role_sync", skip_serializing_if = "Option::is_none")]
    pub skip_org_role_sync: Option<bool>,
    #[serde(rename = "team_ids", skip_serializing_if = "Option::is_none")]
    pub team_ids: Option<Vec<i32>>,
}

impl GithubAuthIntegration {
    pub fn new(client_id: String, client_secret: String) -> GithubAuthIntegration {
        GithubAuthIntegration {
            allow_sign_up: None,
            allowed_organizations: None,
            auto_login: None,
            client_id,
            client_secret,
            skip_org_role_sync: None,
            team_ids: None,
        }
    }
}
