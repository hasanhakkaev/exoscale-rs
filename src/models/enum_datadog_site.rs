/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EnumDatadogSite {
    #[serde(rename = "us3.datadoghq.com")]
    Us3DatadoghqCom,
    #[serde(rename = "ddog-gov.com")]
    DdogGovCom,
    #[serde(rename = "datadoghq.eu")]
    DatadoghqEu,
    #[serde(rename = "us5.datadoghq.com")]
    Us5DatadoghqCom,
    #[serde(rename = "ap1.datadoghq.com")]
    Ap1DatadoghqCom,
    #[serde(rename = "datadoghq.com")]
    DatadoghqCom,

}

impl std::fmt::Display for EnumDatadogSite {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Us3DatadoghqCom => write!(f, "us3.datadoghq.com"),
            Self::DdogGovCom => write!(f, "ddog-gov.com"),
            Self::DatadoghqEu => write!(f, "datadoghq.eu"),
            Self::Us5DatadoghqCom => write!(f, "us5.datadoghq.com"),
            Self::Ap1DatadoghqCom => write!(f, "ap1.datadoghq.com"),
            Self::DatadoghqCom => write!(f, "datadoghq.com"),
        }
    }
}

impl Default for EnumDatadogSite {
    fn default() -> EnumDatadogSite {
        Self::Us3DatadoghqCom
    }
}

