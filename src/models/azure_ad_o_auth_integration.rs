/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AzureAdOAuthIntegration {
    #[serde(rename = "allow_sign_up", skip_serializing_if = "Option::is_none")]
    pub allow_sign_up: Option<bool>,
    #[serde(rename = "allowed_domains", skip_serializing_if = "Option::is_none")]
    pub allowed_domains: Option<Vec<String>>,
    #[serde(rename = "allowed_groups", skip_serializing_if = "Option::is_none")]
    pub allowed_groups: Option<Vec<String>>,
    #[serde(rename = "auth_url")]
    pub auth_url: String,
    #[serde(rename = "client_id")]
    pub client_id: String,
    #[serde(rename = "client_secret")]
    pub client_secret: String,
    #[serde(rename = "token_url")]
    pub token_url: String,
}

impl AzureAdOAuthIntegration {
    pub fn new(auth_url: String, client_id: String, client_secret: String, token_url: String) -> AzureAdOAuthIntegration {
        AzureAdOAuthIntegration {
            allow_sign_up: None,
            allowed_domains: None,
            allowed_groups: None,
            auth_url,
            client_id,
            client_secret,
            token_url,
        }
    }
}

