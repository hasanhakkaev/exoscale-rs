/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DbaasEndpointRsyslogOptionalFields {
    /// Rsyslog server IP address or hostname
    #[serde(rename = "server", skip_serializing_if = "Option::is_none")]
    pub server: Option<String>,
    /// Rsyslog server port
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<u64>,
    /// Require TLS
    #[serde(rename = "tls", skip_serializing_if = "Option::is_none")]
    pub tls: Option<bool>,
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<models::EnumRsyslogFormat>,
    /// Custom syslog message format
    #[serde(rename = "logline", skip_serializing_if = "Option::is_none")]
    pub logline: Option<String>,
    /// Structured data block for log message
    #[serde(rename = "sd", skip_serializing_if = "Option::is_none")]
    pub sd: Option<String>,
    /// Rsyslog max message size
    #[serde(rename = "max-message-size", skip_serializing_if = "Option::is_none")]
    pub max_message_size: Option<u64>,
}

impl DbaasEndpointRsyslogOptionalFields {
    pub fn new() -> DbaasEndpointRsyslogOptionalFields {
        DbaasEndpointRsyslogOptionalFields {
            server: None,
            port: None,
            tls: None,
            format: None,
            logline: None,
            sd: None,
            max_message_size: None,
        }
    }
}

