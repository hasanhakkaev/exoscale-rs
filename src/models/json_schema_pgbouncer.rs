/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsonSchemaPgbouncer {
    #[serde(rename = "min_pool_size", skip_serializing_if = "Option::is_none")]
    pub min_pool_size: Option<u16>,
    #[serde(rename = "ignore_startup_parameters", skip_serializing_if = "Option::is_none")]
    pub ignore_startup_parameters: Option<Vec<IgnoreStartupParameters>>,
    #[serde(rename = "server_lifetime", skip_serializing_if = "Option::is_none")]
    pub server_lifetime: Option<u32>,
    #[serde(rename = "autodb_pool_mode", skip_serializing_if = "Option::is_none")]
    pub autodb_pool_mode: Option<AutodbPoolMode>,
    #[serde(rename = "server_idle_timeout", skip_serializing_if = "Option::is_none")]
    pub server_idle_timeout: Option<u32>,
    #[serde(rename = "autodb_max_db_connections", skip_serializing_if = "Option::is_none")]
    pub autodb_max_db_connections: Option<u32>,
    #[serde(rename = "max_prepared_statements", skip_serializing_if = "Option::is_none")]
    pub max_prepared_statements: Option<u16>,
    #[serde(rename = "server_reset_query_always", skip_serializing_if = "Option::is_none")]
    pub server_reset_query_always: Option<bool>,
    #[serde(rename = "autodb_pool_size", skip_serializing_if = "Option::is_none")]
    pub autodb_pool_size: Option<u16>,
    #[serde(rename = "autodb_idle_timeout", skip_serializing_if = "Option::is_none")]
    pub autodb_idle_timeout: Option<u32>,
}

impl JsonSchemaPgbouncer {
    /// System-wide settings for pgbouncer.
    pub fn new() -> JsonSchemaPgbouncer {
        JsonSchemaPgbouncer {
            min_pool_size: None,
            ignore_startup_parameters: None,
            server_lifetime: None,
            autodb_pool_mode: None,
            server_idle_timeout: None,
            autodb_max_db_connections: None,
            max_prepared_statements: None,
            server_reset_query_always: None,
            autodb_pool_size: None,
            autodb_idle_timeout: None,
        }
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IgnoreStartupParameters {
    #[serde(rename = "extra_float_digits")]
    ExtraFloatDigits,
    #[serde(rename = "search_path")]
    SearchPath,
}

impl Default for IgnoreStartupParameters {
    fn default() -> IgnoreStartupParameters {
        Self::ExtraFloatDigits
    }
}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AutodbPoolMode {
    #[serde(rename = "transaction")]
    Transaction,
    #[serde(rename = "session")]
    Session,
    #[serde(rename = "statement")]
    Statement,
}

impl Default for AutodbPoolMode {
    fn default() -> AutodbPoolMode {
        Self::Transaction
    }
}

