/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InstanceState {
    #[serde(rename = "expunging")]
    Expunging,
    #[serde(rename = "starting")]
    Starting,
    #[serde(rename = "destroying")]
    Destroying,
    #[serde(rename = "running")]
    Running,
    #[serde(rename = "stopping")]
    Stopping,
    #[serde(rename = "stopped")]
    Stopped,
    #[serde(rename = "migrating")]
    Migrating,
    #[serde(rename = "error")]
    Error,
    #[serde(rename = "destroyed")]
    Destroyed,

}

impl std::fmt::Display for InstanceState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Expunging => write!(f, "expunging"),
            Self::Starting => write!(f, "starting"),
            Self::Destroying => write!(f, "destroying"),
            Self::Running => write!(f, "running"),
            Self::Stopping => write!(f, "stopping"),
            Self::Stopped => write!(f, "stopped"),
            Self::Migrating => write!(f, "migrating"),
            Self::Error => write!(f, "error"),
            Self::Destroyed => write!(f, "destroyed"),
        }
    }
}

impl Default for InstanceState {
    fn default() -> InstanceState {
        Self::Expunging
    }
}

