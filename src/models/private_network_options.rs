/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */
/// PrivateNetworkOptions : Private Network DHCP Options
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrivateNetworkOptions {
    /// Routers
    #[serde(rename = "routers", skip_serializing_if = "Option::is_none")]
    pub routers: Option<Vec<String>>,
    /// DNS Servers
    #[serde(rename = "dns-servers", skip_serializing_if = "Option::is_none")]
    pub dns_servers: Option<Vec<String>>,
    /// NTP Servers
    #[serde(rename = "ntp-servers", skip_serializing_if = "Option::is_none")]
    pub ntp_servers: Option<Vec<String>>,
    /// Domain search list, limited to 255 octets
    #[serde(rename = "domain-search", skip_serializing_if = "Option::is_none")]
    pub domain_search: Option<Vec<String>>,
}

impl PrivateNetworkOptions {
    /// Private Network DHCP Options
    pub fn new() -> PrivateNetworkOptions {
        PrivateNetworkOptions {
            routers: None,
            dns_servers: None,
            ntp_servers: None,
            domain_search: None,
        }
    }
}
