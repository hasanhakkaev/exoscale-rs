/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */
use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DbaasKafkaAcls {
    #[serde(rename = "topic-acl", skip_serializing_if = "Option::is_none")]
    pub topic_acl: Option<Vec<models::DbaasKafkaTopicAclEntry>>,
    #[serde(
        rename = "schema-registry-acl",
        skip_serializing_if = "Option::is_none"
    )]
    pub schema_registry_acl: Option<Vec<models::DbaasKafkaSchemaRegistryAclEntry>>,
}

impl DbaasKafkaAcls {
    pub fn new() -> DbaasKafkaAcls {
        DbaasKafkaAcls {
            topic_acl: None,
            schema_registry_acl: None,
        }
    }
}
