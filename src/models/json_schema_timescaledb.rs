/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// JsonSchemaTimescaledb: System-wide settings for the timescaledb extension
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JsonSchemaTimescaledb {
    /// The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
    #[serde(rename = "max_background_workers", skip_serializing_if = "Option::is_none")]
    pub max_background_workers: Option<u16>,
}

impl JsonSchemaTimescaledb {
    /// System-wide settings for the timescaledb extension
    pub fn new() -> JsonSchemaTimescaledb {
        JsonSchemaTimescaledb {
            max_background_workers: None,
        }
    }
}

