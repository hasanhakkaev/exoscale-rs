/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EnumRsyslogFormat {
    #[serde(rename = "custom")]
    Custom,
    #[serde(rename = "rfc3164")]
    Rfc3164,
    #[serde(rename = "rfc5424")]
    Rfc5424,

}

impl std::fmt::Display for EnumRsyslogFormat {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Custom => write!(f, "custom"),
            Self::Rfc3164 => write!(f, "rfc3164"),
            Self::Rfc5424 => write!(f, "rfc5424"),
        }
    }
}

impl Default for EnumRsyslogFormat {
    fn default() -> EnumRsyslogFormat {
        Self::Custom
    }
}

