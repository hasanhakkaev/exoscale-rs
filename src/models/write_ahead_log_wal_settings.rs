/*
 * Exoscale Public API
 *
 *  Infrastructure automation API, allowing programmatic access to all Exoscale products and services.  The [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:  * [JSON format](https://openapi-v2.exoscale.com/source.json) * [YAML format](https://openapi-v2.exoscale.com/source.yaml)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@exoscale.com
 * Generated by: https://openapi-generator.tech
 */
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WriteAheadLogWalSettings {
    /// PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal_keep_size minimum WAL size setting takes precedence over this.
    #[serde(
        rename = "max_slot_wal_keep_size",
        skip_serializing_if = "Option::is_none"
    )]
    pub max_slot_wal_keep_size: Option<i32>,
    /// PostgreSQL maximum WAL senders
    #[serde(rename = "max_wal_senders", skip_serializing_if = "Option::is_none")]
    pub max_wal_senders: Option<i32>,
    /// Terminate replication connections that are inactive for longer than this amount of time, in milliseconds.
    #[serde(rename = "wal_sender_timeout", skip_serializing_if = "Option::is_none")]
    pub wal_sender_timeout: Option<i32>,
    /// WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance
    #[serde(rename = "wal_writer_delay", skip_serializing_if = "Option::is_none")]
    pub wal_writer_delay: Option<i32>,
}

impl WriteAheadLogWalSettings {
    pub fn new() -> WriteAheadLogWalSettings {
        WriteAheadLogWalSettings {
            max_slot_wal_keep_size: None,
            max_wal_senders: None,
            wal_sender_timeout: None,
            wal_writer_delay: None,
        }
    }
}
